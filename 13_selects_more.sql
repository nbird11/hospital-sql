-- -----------------------------------------------------
-- Contents:
--   Find all persons with specific role
--     person
--     person_has_role
--   Find upcoming appointments for specific doctor
--     appointment
--     person
--     status
--   Find all patients with unpaid bills
--     bill
--     person
--   Find all medications running low in stock
--     medication
--   Find patient’s treatment history.
--     treatment
--     person
--     prescription
--     medication
--     dosage
--     frequency
--     duration
--   Find current room occupancy status
--     room
--     room_type
--   Find all department names
--     department
--   Find all staff members of a specific department
--     staff
--     person
--     department
--     person_has_role
--     role
--   Find patients currently assigned to a specific room
--     overnight_room_assignment
--     person
--     room
--     room_type
--   Report of monthly revenue generated by treatments
--     bill
--   Find amount of appointments for each doctor
--     appointment
--     person
--     person_has_role
--     role
--   Get all patient info + last appointment info
--     appointment
--     person
--     person_has_address
--     address
--     status
-- 
-- Author:
--   Nathan Bird (bir19004@byui.edu)
-- -----------------------------------------------------

USE hospital;

-- -----------------------------------------------------
-- Find all persons with specific role
--
-- Useful for getting list of all doctors, or list of
-- all patients.
-- -----------------------------------------------------
SELECT p.first_name
,      p.last_name
,      r.role
FROM   person p
JOIN   person_has_role pr ON p.person_id = pr.person_id
JOIN   role r ON pr.role_id = r.role_id
WHERE  r.role = 'Doctor';  -- Role here.


-- -----------------------------------------------------
-- Find upcoming appointments for specific doctor
-- 
-- Doctor would be picked from a list using the previous
-- statement and inserted into the subquery.
-- -----------------------------------------------------
SELECT   a.appointment_id
,        CONCAT(p.first_name, ' ', p.last_name) AS patient_name
,        a.datetime
,        a.reason
,        s.status
FROM     appointment a
JOIN     person p ON a.patient_id = p.person_id
JOIN     status s ON a.status_id = s.status_id
WHERE    a.doctor_id = (
  SELECT   p.person_id
  FROM     person p
  WHERE    p.first_name = "Sarah"  # Doctor name here.
  AND      p.last_name  = "Chen"
)
AND      a.datetime >= '2024-01-01 00:00:00'  # This would be NOW() in real use case.
ORDER BY a.datetime ASC;


-- -----------------------------------------------------
-- Find all patients with unpaid bills
-- -----------------------------------------------------
SELECT CONCAT(p.first_name, ' ', p.last_name) AS patient_name
,      b.treatment_id
,      b.date
,      b.total
,      b.paid_amount
,     (b.total - b.paid_amount) AS balance_due
FROM bill b
JOIN person p ON b.patient_id = p.person_id
WHERE b.paid_amount < b.total;


-- -----------------------------------------------------
-- Find all medications running low in stock
-- -----------------------------------------------------
SELECT   name
,        description
,        stock_quantity
FROM     medication
WHERE    stock_quantity < 500  # Threshold for low stock
ORDER BY stock_quantity ASC;


-- -----------------------------------------------------
-- Find patient’s treatment history.
--
-- Including prescriptions.
-- -----------------------------------------------------
SELECT    t.treatment_id
,         t.date
,         t.diagnosis
,         t.details
,         CONCAT(doc.first_name, ' ', doc.last_name) AS doctor_name
,         m.name AS medication_name
,         dsg.dosage
,         freq.frequency
,         dur.duration
FROM      treatment t
JOIN      person doc     ON t.doctor_id     = doc.person_id
LEFT JOIN prescription p ON t.treatment_id  = p.treatment_id
LEFT JOIN medication m   ON p.medication_id = m.medication_id
LEFT JOIN dosage dsg     ON p.dosage_id     = dsg.dosage_id
LEFT JOIN frequency freq ON p.frequency_id  = freq.frequency_id
LEFT JOIN duration dur   ON p.duration_id   = dur.duration_id
WHERE     t.patient_id = (
  SELECT person_id
  FROM   person
  WHERE  first_name = "John"  # Patient name here.
  AND    last_name  = "Smith"
)
ORDER BY  t.date DESC;


-- -----------------------------------------------------
-- Find current room occupancy status
-- -----------------------------------------------------
SELECT   r.room_id
,        r.number AS room_number
,        rt.type AS room_type
,        r.capacity
,        CASE
           WHEN r.available = 1 THEN 'Available'
           ELSE 'Occupied'
         END AS status
FROM     room r
JOIN     room_type rt ON r.room_type_id = rt.room_type_id
# WHERE    r.available  # Uncomment to get specific status.
ORDER BY room_number;


-- -----------------------------------------------------
-- Find all department names
-- -----------------------------------------------------
SELECT name
FROM department;

-- -----------------------------------------------------
-- Find all staff members of a specific department
--
-- NOTE: There are many patients listed as members of
-- the staff. This would be incorrect with real data.
-- -----------------------------------------------------
SELECT   CONCAT(p.first_name, ' ', p.last_name) AS staff_name
,        d.name AS department_name
,        p.phone
,        r.role
FROM     staff s
JOIN     person p ON s.person_id = p.person_id
JOIN     department d ON s.department_id = d.department_id
JOIN     person_has_role pr ON s.person_id = pr.person_id
JOIN     role r ON pr.role_id = r.role_id
WHERE    s.department_id = (
  SELECT   dept.department_id
  FROM     department dept
  WHERE    dept.name = "Cardiology"  # Department name here.
)
AND      s.currently_employed;


-- -----------------------------------------------------
-- Find patients currently assigned to a specific room
-- -----------------------------------------------------
SELECT   CONCAT(p.first_name, ' ', p.last_name) AS patient_name
,        ora.start
,        ora.end
,        r.number AS room_number
,        rt.type AS room_type
FROM     overnight_room_assignment ora
JOIN     person p ON ora.person_id = p.person_id
JOIN     room r ON ora.room_id = r.room_id
JOIN     room_type rt ON r.room_type_id = rt.room_type_id
WHERE    r.number = 111  # Room number here.
AND      '2024-01-01 00:00:00' BETWEEN ora.start AND ora.end  # This would be NOW() in real use case.
ORDER BY r.number;


-- -----------------------------------------------------
-- Report of monthly revenue generated by treatments
-- -----------------------------------------------------
SELECT   DATE_FORMAT(b.date, '%Y-%m') AS billing_month
,        SUM(total) AS total_revenue
,        SUM(paid_amount) AS total_paid
,        (SUM(total) - SUM(paid_amount)) AS outstanding_balance
FROM     bill b
GROUP BY billing_month
ORDER BY billing_month DESC;


-- -----------------------------------------------------
-- Find amount of appointments for each doctor
-- -----------------------------------------------------
SELECT   CONCAT(d.first_name, ' ', d.last_name) AS doctor_name
,        COUNT(a.appointment_id) AS appointment_count
FROM     appointment a
JOIN     person d ON a.doctor_id = d.person_id
WHERE    MONTH(a.datetime) = MONTH('2024-01-01')  # This would be CURRENT_DATE() in real use case.
AND      YEAR(a.datetime) = YEAR('2024-01-01')
AND      d.person_id IN (
  SELECT  pr.person_id
  FROM    person_has_role pr
  WHERE   pr.role_id = (
    SELECT role_id
    FROM   role
    WHERE  role = 'Doctor'
  )
)
GROUP BY a.doctor_id
ORDER BY appointment_count DESC;


-- -----------------------------------------------------
-- Get all patient info + last appointment info
-- -----------------------------------------------------
SELECT   CONCAT(p.first_name, ' ', p.last_name) AS patient_name
,        p.sex
,        CONCAT(address_1, ', ', COALESCE(CONCAT(address_2, ', '), ''), city, ', ', state, ' ', postal_code) AS address
,        MAX(a.datetime) AS last_appointment_date
,        a.reason
,        s.status
FROM     appointment a
JOIN     person p ON a.patient_id = p.person_id
JOIN     person_has_address pa ON p.person_id = pa.person_id
JOIN     address addr ON pa.address_id = addr.address_id
JOIN     status s ON a.status_id = s.status_id
WHERE    pa.current
GROUP BY a.patient_id
ORDER BY last_appointment_date DESC;

